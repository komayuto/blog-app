.article#article-show{data: {article_id: @article.id}}
  - if @article.eyecatch.attached?
    -# articleの記事にアイキャッチ画像が設定されていたら
    .article_image
      = image_tag @article.eyecatch
      -# アイキャッチ画像を表示
  %h1.article_title= @article.title
  .article_detail
    = link_to account_path(@article.user) do
      -# 他のアカウントのプロフィールにリンクを飛ばしている
      = image_tag @article.user.avatar_image
      -# imgの画像のアカウントの選択
    %div
      %p= @article.author_name
      -# article.rbでauthor_nameの内容を書いている
      %p= @article.display_created_at
      -# 上のdisplay_created_atと入力すると日付の表示ができるようにarticle.rbで設定した。@articleでarticle.rbの設定が適用されている
      - if user_signed_in? && current_user.has_written?(@article)
        -# if user_signed_in?でログインしていたら、かつ、current_userで登録したユーザーの取得、has_written?(@article)でuser.rbで作成した情報を持ってきている。has_written?はコードがわかりやすくなるためにこのようにしている
        .article_detail_actions
          .dropdown
            = image_tag 'actions.svg', class: 'dropbtb'
            .dropdown-content.mini
              = link_to '編集する', edit_article_path(@article)
              -# 上の文の@articleはidを指定しないといけないため人ようとなる
              = link_to '削除する', article_path(@article), data: { method: 'delete', confirm: '本当に削除してもよろしいですか？'}
              -# link_toでは基本的にgetメソッドになってしまうためmethod: 'delete'でメソッドを指定してあげなければならない
              -# 上の文の@articleはidを指定しないといけないため必要となる

  .artcle_content
    = @article.content
  - if user_signed_in?
    -# もしサインインしていたら
    .article_heart.hidden.active-heart
      -# クラスのhiddenをscssで表示を消す用事してクリックされたら表示するようにする
      = image_tag 'heart-active.svg'
      -# heart-active.svgの表示
    .article_heart.hidden.inactive-heart
      = image_tag 'heart.svg'
      -# heart.svgの表示

.article
  %h2 コメント一覧
  - @comments.each do |comment|
    -# コメント一覧を繰り返す
    .article_comment
      %p= comment.content
      -# コメント一覧の表示。

.container
  = link_to new_article_comment_path(@article) do
    .btn-secondary
      コメントを追加
      -# link_toでリンクの作成、new_article_comment_pathはcommentsのURL、(@article)はarticleIDの指定。

= javascript_pack_tag 'article'
-# javascriptのpackの中のarticleを読み込める